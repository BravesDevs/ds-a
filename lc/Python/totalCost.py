class Solution(object):
    def totalCost(self, costs, k, candidates):
        sessions=0
        totalCost=0
        minCost = 0
        while sessions<k:
            if len(costs)<candidates*2:
                minCost=min(costs)
                costs.remove(minCost)
                totalCost+=minCost
            else:
                firstHalf = costs[0:candidates]
                secondHalf = [999]*(len(costs)-(2*candidates)) + costs[-candidates:len(costs)]

                minFirstHalf = min(firstHalf)
                minSecondHalf = min(secondHalf)

                if(minFirstHalf==minSecondHalf):
                    firstHalf.remove(minFirstHalf)
                
                
                # revisedCost = costs[0:candidates] + [999]*(len(costs)-(2*candidates)) + costs[-candidates:len(costs)]                
                # minCost=min(revisedCost)
                # totalCost+=minCost
                # costs.pop(revisedCost.index(minCost))
            sessions+=1
        return totalCost
sln = Solution()
result = sln.totalCost([4627,1846,4440,2867,460,1936,89,731,839,2428,2544,2422,4194,4313,197,1735,153,1539,1538,1312,3587,1847,1924,4657,1980,3062,3754,676,3815,1892,2442,2169,4896,3612,4254,3785,1932,4558,1443,3259,2053,1599,2488,417,1247,4674,4801,2369,4355,4733,613,4048,4950,923,4069,381,2519,3987,4501,1377,1579,2583,2733,4732,4844,2820,250,3444,4170,1630,2715,3432,2907,690,4685,3968,2621,4784,2275,602,2778,789,3805,276,2752,596,420,3564,1048,1094,4970,4449,491,2003,2863,3520,1596,2635,4972,1336,2084,208,452,1749,3776,2880,3688,2380,11,1577,4526,1950,1027,476,994,2521,4164,2036,4857,3436,3828,3317,3534,318,4443,1360,3404,2139,89,1036,4375,1353,1833,4256,655,2537,3575,3037,778,3086,2857,2466,1103,4596,2765,4633,2884,3415,3591,1348,642,4213,1474,2016,1760,809,1374,1519,527,2038,231,1920,2511,4862,4364,4846,3155,271,2001,1128,2025,4580,2059,974,884,4295,4491,2953,4564,4479,2623,686,3359,374,4835,2248,1107,4650,3451,3771,814,585,828,4216,2639,132,1539,4842,2915,2948,68,327,4174,600,2319,2835,1600,3259,1321,2981,1893,4805,2102,1638,948,492,3101,1206,1346,3264,139,2372,2108,3931,673,4622,2456,474,1094,109,2363,314,2526,3100,516,888,4654,3406,4879,2669,3719,822,520,4258,1980,334,514,160,3129,1823,47,1892,2216,2104,1434,2533,1575,601,2140,4286,1793,2864,2582,375,1826,2162,1333,2574,4166,615,1419,2182,1650,310,2000,2084,2731,4686,2489,1980,3297,2247,1087,1892,1342,4146,3899,3370,1580,2553,3641,4011,475,2379,3967,224,2606,4487,3210,1528,3274,1327,2279,3477,3986,2844,3075,1749,4842,3752,1112,3222,3221,1741,3950,4508,4402,4446,3180,2361,2666,1368,2781,1664,4253,2389,326,4864,1275,1826,2029,3277,2000,3451,2864,127,4761,2223,1259,2644,601,4054,3214,2019,4682,3609,2031,848,1524,3241,706,4253,2990,910,1536,3798,4445,1004,474,3482,3076,1192,354,1033,3600,174,654,1791,2540,9,1265,2979,1137,1007,1900,1848,2604,3935,2124,4497,4908,4085,1486,3393,37,3189,4076,1308,816,1796,137,2301,1532,2693,4484,2563,2768,1259,4186,756,1835,3351,2470,1378,1671,2647,2912,1760,4279,2370,776,2824,1733,3037,2860,2970,2718,4400,3557,2700,3372,3145,2115,2422,4868,1576,560,3972,2516,2584,2869,3520,3105,479,4670,1480,1472,777,659,3427,4124,3999,4658,3388,4677,3613,621,3266,178,833,893,353,819,1462,2577,801,3695,4858,2729,601,2632,1390,1536,558,890,780,1584,3532,1975,1056,824,2196,1189,782,1435,3577,3039,1669,619],471,48)
print(result)